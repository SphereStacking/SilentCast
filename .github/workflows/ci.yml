name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - '.github/workflows/ci.yml'
      - 'go.mod'
      - 'go.sum'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/**'
      - '.github/workflows/ci.yml'
      - 'go.mod'
      - 'go.sum'

env:
  GO_VERSION: '1.21'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: app/go.sum

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.55.2
        working-directory: app
        args: --timeout=5m


  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: ['1.21', '1.22']
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}
        cache-dependency-path: app/go.sum

    - name: Install dependencies
      run: |
        cd app
        go mod download

    - name: Run tests
      shell: bash
      run: |
        cd app
        go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest' && matrix.go == '1.21'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: app/go.sum

    - name: Build
      run: |
        cd app
        go build -v -tags "nogohook notray" ./cmd/silentcast

    - name: Test build
      run: |
        ./app/silentcast --help || true
