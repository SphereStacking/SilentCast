id: T066
title: "エラーハンドリングパターンの統一"
type: refactor
priority: medium
status: completed
created: "2025-07-19"
updated: "2025-07-20"
assignee: null
labels:
  - refactor
  - error-handling
  - consistency

description: |
  ## 概要
  プロジェクト全体のエラーハンドリングパターンを統一し、一貫性のあるエラー処理を実装する。
  
  ## 現状の問題
  - エラーメッセージのフォーマットが不統一
  - エラーのラップ方法が混在（fmt.Errorf vs errors.Wrap）
  - エラータイプの定義が散在
  - ユーザー向けメッセージと開発者向けメッセージの区別が不明確
  
tasks:
  - [ ] 現状のエラーハンドリングパターンの調査
  - [ ] エラーハンドリングガイドラインの作成
  - [ ] カスタムエラータイプの設計と実装
  - [ ] エラーラッピングの統一（errors.Wrapの使用）
  - [ ] センチネルエラーの定義と整理
  - [ ] エラーメッセージのフォーマット統一
  - [ ] ユーザー向けエラーメッセージの改善
  - [ ] エラーログ出力の統一
  - [ ] パニックとリカバリーの適切な使用
  - [ ] エラーハンドリングのテスト追加
  
acceptance_criteria:
  - 統一されたエラーハンドリングガイドラインの文書化
  - 全てのエラーが適切にラップされている
  - ユーザー向けメッセージが分かりやすい
  - エラーのトレーサビリティが確保されている
  - エラーハンドリングのテストカバレッジ90%以上

dependencies: [T064, T065]  # 親チケット：プロジェクト全体の監査とリファクタリング

related: [T064]

files:
  - app/internal/errors/**/*.go
  - app/internal/**/*.go
  - app/cmd/**/*.go
  - docs/development/error-handling.md

time_estimate: 8h
time_spent: 0h

notes: |
  ## エラーハンドリングのベストプラクティス
  - errors.Is/As を使用したエラー判定
  - スタックトレース付きエラーラップ
  - センチネルエラーの適切な使用
  - エラーメッセージの国際化対応準備